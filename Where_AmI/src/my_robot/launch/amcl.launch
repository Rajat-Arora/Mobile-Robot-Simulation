<?xml version="1.0" encoding="UTF-8"?>

<launch>

	<arg name="map_file" default="$(find my_robot)/maps/hostelM_map.yaml"/>

	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"></node>

	<node name="amcl" pkg="amcl" type="amcl" output="screen">
		<remap from="scan" to="/scan"/>
		<param name="odom_frame_id" value="odom"/>
  		
		<!-- Using diff-coorected as diff is trained for different robots and diff-corrected can be cutomized -->
		<!-- odom_alpha1 to 4 taken from research paper based on experimental results. -->

		<param name="odom_model_type" value="diff-corrected"/>
  		<param name="odom_alpha1" value="0.005"/>
  		<param name="odom_alpha2" value="0.005"/>
  		<param name="odom_alpha3" value="0.010"/>
  		<param name="odom_alpha4" value="0.005"/>
  		<param name="odom_alpha5" value="0.005"/>

  		<param name="base_frame_id" value="robot_footprint"/>
  		<param name="global_frame_id" value="map"/>
  		
		<param name="selective_resampling" value="true"/>
		<param name="laser_max_beams" value="50"/>
		
		
        <param name="initial_pose_x" value="0.0"/>
		<param name="initial_pose_y" value="0.0"/>
	
	</node>
	
	<node name="move_base" pkg="move_base" type="move_base" respawn="false" output="screen">
		<remap from="scan" to="/scan"/>
		<param name="base_global_planner" value="navfn/NavfnROS" />
  		<param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
		<rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
  		<rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
  		<rosparam file="$(find my_robot)/config/local_costmap_params.yaml" command="load" />
  		<rosparam file="$(find my_robot)/config/global_costmap_params.yaml" command="load" />
  		<rosparam file="$(find my_robot)/config/base_local_planner_params.yaml" command="load" />
	</node>



	  <!-- Robot pose -->
  	<arg name="x" default="-1"/>
 	<arg name="y" default="0"/>
  	<arg name="z" default="0"/>
  	<arg name="roll" default="0"/>
  	<arg name="pitch" default="0"/>
  	<arg name="yaw" default="1.0"/>

  	<!-- Launch other relevant files-->
  	<include file="$(find my_robot)/launch/robot_description.launch"/>

    
 <!-- World File -->
 <!-- Each arg has a name and default value which will be used later -->
 <arg name="world_file" default="$(find my_robot)/world/hostelM.world"/>

  <!-- Launch Gazebo World -->
  <!-- The empty_world in gazebo_ros package contains imp definations inhereted by our world. To launch our world we pass arg as our world file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="true" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <!-- Find my robot Description-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find my_robot)/urdf/my_robot.xacro'"/>

  <!-- Spawn My Robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
        args="-urdf -param robot_description -model my_robot 
              -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

  <node name="rviz" type="rviz" pkg="rviz" args="-d $(find my_robot)/rviz/amcl.rviz" />	

</launch>
